@model UserAccountViewModel;
@{
    ViewData["Title"] = "Account";
}

<h1>Account</h1>

@if (!string.IsNullOrEmpty(Model?.Error.message))
{
    <div class="alert alert-@Model.Error.type alert-dismissible" role="alert">
        <div>@Model.Error.message</div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card topmargin">
    <div class="card-body">
        <div class="row">
            <div class="col">
                <h2>Account details</h2>

                <p><strong>Name: </strong>@Model?.Username</p>
                <p><strong>Level: </strong>@Model?.Level</p>
                @{
                    if (Model?.Coins != null)
                    {
                        <p><strong>Coins: </strong>@Model.Coins.Coins</p>
                    }
                    else
                    {
                        <p><strong>Coins: </strong>No coins registered</p>
                    }
                }
            </div>
        </div>
        <form method="post" asp-controller="User" asp-action="Logout">
            <button class="btn btn-primary" type="submit">Logout</button>
        </form>
    </div>
</div>

@if (Model?.Users != null && Model.Coins != null)
{
    <div class="card topmargin">
        <div class="card-body">
            <div class="row">
                <h2>Transfer Money</h2>
                <form method="post" asp-action="SendMoney" asp-controller="User">
                    <div class="col-md-8 topmargin">
                        <input type="number" name="amount" pattern="[0-9]+" min="1" max="@Model.Coins.Coins" required="required" class="form-control" placeholder="Amount to be transferred" />
                    </div>
                    <div class="col-md-8 topmargin">
                        <select name="reciever" class="form-select topmargin">
                            @{
                                foreach (var user in Model.Users)
                                {
                                    <option value="@user">@user</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-8 topmargin">
                        <button type="submit" class="btn btn-primary">Transfer money</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<div class="card topmargin">
    <div class="card-body">
        <div class="row">
            <h2>Create User</h2>
            @using (Html.BeginForm("CreateUser", "User", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="mb-3">
                    @Html.TextBoxFor(m => m.CreateUser.Username, null, new { @class = "form-control", @required = "required", placeholder = "Enter username" })
                </div>
                <div class="mb-3 input-group">
                    @Html.PasswordFor(m => m.CreateUser.Password, new { @class = "form-control", @minlength = "8", @maxlength = "16", @pattern = @"^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,16}$", @required = "required", placeholder = "Enter password" })
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#passwordPolicyModal">
                        Password Policy
                    </button>
                </div>
                <div class="mb-3">
                    @Html.TextBoxFor(m => m.CreateUser.Coins, null, new { @class = "form-control", @type = "number", @pattern = "[0-9]+", @required = "required", @min = "0", placeholder = "Enter amount of coins" })
                </div>
                <div class="mb-3">
                    @Html.DropDownListFor(m => m.CreateUser.Level, new SelectList(new List<string> { "Admin", "User" }), "Select user level", new { @class = "form-select" })
                </div>
                <div>
                    <button type="submit" class="btn btn-primary">Create user</button>
                </div>
            }
        </div>
    </div>
</div>

@if (Model?.AllAccounts != null)
{
    <div class="card topmargin">
        <div class="card-body">
            <div class="row">
                <h2>Modify User</h2>
                <form method="post" asp-controller="User" asp-action="ModifyUser">

                    @{
                        <div class="col-md-8 topmargin">
                            <select name="username" class="form-select">
                                @foreach (var item in Model.AllAccounts)
                                {
                                    <option value="@item.Username">@item.Username - @item.Coins Coins</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-8 topmargin">
                            <input placeholder="Enter amount of coins" name="coins" type="number" class="form-control" min="0" required="required" pattern="[0-9]+" />
                        </div>

                        <div class="col-md-8 topmargin">
                            <button type="submit" class="btn btn-primary">Change account</button>
                        </div>
                    }
                </form>

            </div>
        </div>
    </div>
}